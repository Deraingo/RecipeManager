// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// id Int @id @default(autoincrement())
// createdAt DateTime @default(now())
// updatedAt DateTime @updatedAt

model User {
  id              Int      @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String   @unique
  password_hash   String
  profile         Profile  @relation(fields: [profileId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  profileId       Int      @unique
  recipes         Recipe[]
  sharedCookBooks SharedCookBook[]
}

model Profile {
  id               Int      @id @default(autoincrement())
  age              Int?
  profileImageUrl  String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User?
}

model Recipe {
  id               Int     @id @default(autoincrement())
  name             String
  prepTime         String
  createdAt        DateTime
  updatedAt        DateTime
  cookingTime      String
  servings         Int
  userId           Int
  user             User     @relation(fields: [userId], references: [id])
  recipeIngredients Recipe_Ingredients[]
  instructions     Instructions[]
}

model Ingredients {
  id               Int      @id @default(autoincrement())
  name             String
  quantity         Int
  createdAt        DateTime 
  updatedAt        DateTime 
  recipeIngredients Recipe_Ingredients[]
}

model Recipe_Ingredients {
  id               Int  @id @default(autoincrement())
  recipeId         Int
  ingredientId     Int
  recipe           Recipe @relation(fields: [recipeId], references: [id])
  ingredient       Ingredients @relation(fields: [ingredientId], references: [id])
}

model Instructions {
  id               Int  @id @default(autoincrement())
  stepNumber       Int
  instruction      String
  createdAt        DateTime
  updatedAt        DateTime
  recipeId         Int
  recipe           Recipe @relation(fields: [recipeId], references: [id])
}

model Cook_Book {
  id               Int   @id @default(autoincrement())
  name             String
  createdAt        DateTime
  updatedAt        DateTime
  shared           Boolean
  sharedWith       SharedCookBook[]
}

model SharedCookBook {
  id               Int   @id @default(autoincrement())
  sharedWithUserId Int
  sharedWithUser   User  @relation(fields: [sharedWithUserId], references: [id])
  cookBookId       Int
  cookBook         Cook_Book @relation(fields: [cookBookId], references: [id])
}

